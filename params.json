{
  "name": "Skyhub-php",
  "tagline": "A PHP Library for SkyHub API",
  "body": "[![Code Climate](https://codeclimate.com/github/glauberportella/skyhub-php/badges/gpa.svg)](https://codeclimate.com/github/glauberportella/skyhub-php) [![Test Coverage](https://codeclimate.com/github/glauberportella/skyhub-php/badges/coverage.svg)](https://codeclimate.com/github/glauberportella/skyhub-php/coverage)\r\n\r\n#A PHP Library for SkyHub API\r\n\r\nThe purpose of this lib is to create an abstracted layer to facilitate the use of [SkyHub API](http://www.skyhub.com.br) by PHP developers.\r\n\r\n# How to Install\r\n\r\nInstall via composer:\r\n\r\n\tcomposer require glauberportella/skyhub-php\r\n\r\n# Classes\r\n\r\nThe library has the following classes\r\n\r\n### Exceptions\r\n\r\n- \\SkyHub\\Exception\\ForbiddenException\r\n- \\SkyHub\\Exception\\MalformedRequestException\r\n- \\SkyHub\\Exception\\MethodNotAllowedException\r\n- \\SkyHub\\Exception\\NotAcceptableException\r\n- \\SkyHub\\Exception\\NotFoundException\r\n- \\SkyHub\\Exception\\RequestException\r\n- \\SkyHub\\Exception\\SemanticalErrorException\r\n- \\SkyHub\\Exception\\SkyHubException\r\n- \\SkyHub\\Exception\\UnauthorizedException\r\n\r\n### Handlers\r\n\r\n- \\SkyHub\\Handlers\\JsonHandler\r\n\r\n### Requests\r\n\r\n- \\SkyHub\\Request\\AttributeRequest\r\n- \\SkyHub\\Request\\CategoryRequest\r\n- \\SkyHub\\Request\\OrderRequest\r\n- \\SkyHub\\Request\\OrderStatusRequest\r\n- \\SkyHub\\Request\\ProductRequest\r\n- \\SkyHub\\Request\\Request *&lt;abstract&gt;*\r\n- \\SkyHub\\Request\\RequestFactory\r\n- \\SkyHub\\Request\\RequestInterface *&lt;interface&gt;*\r\n- \\SkyHub\\Request\\SaleSystemRequest\r\n- \\SkyHub\\Request\\StatusTypeRequest\r\n\r\n### Resources\r\n\r\n- \\SkyHub\\Resource\\ApiResource *&lt;abstract&gt;*\r\n- \\SkyHub\\Resource\\ApiResourceInterface *&lt;interface&gt;*\r\n- \\SkyHub\\Resource\\Attribute\r\n- \\SkyHub\\Resource\\Category\r\n- \\SkyHub\\Resource\\Order\r\n- \\SkyHub\\Resource\\OrderStatus\r\n- \\SkyHub\\Resource\\Product\r\n- \\SkyHub\\Resource\\SaleSystem\r\n- \\SkyHub\\Resource\\StatusType\r\n\r\n### Security\r\n\r\n- \\SkyHub\\Security\\Auth\r\n\r\n# Documentation\r\n\r\nSend an API request is simple, you create a Request object and call the RESTful methods supported by the [SkyHub API](http://in.skyhub.com.br/api-explorer/) with the required resource/code.\r\n\r\nBelow is some Product requests, the principle is the same for the other type of resources on the SkyHub API.\r\n\r\n## Product Example\r\n\r\n### 1. Get Registered Products\r\n\r\n\t<?php\r\n\trequire_once dirname(__FILE__).'/vendor/autoload.php';\r\n\r\n\t// Every request needs an Auth\r\n\t$auth = new \\SkyHub\\Security\\Auth('YOUR-API-EMAIL', 'YOUR-TOKEN');\r\n\r\n\t// The request object\r\n\t$request = new \\SkyHub\\Request\\ProductRequest($auth);\r\n\r\n\t// Send a GET request\r\n\t$products = $request->get();\r\n\r\n\t// $products can be an array if more than one product is found or a \\SkyHub\\Resource\\Product object.\r\n\r\n## 2. Get one Product\r\n\r\n\t<?php\r\n\trequire_once dirname(__FILE__).'/vendor/autoload.php';\r\n\r\n\t// Every request needs an Auth\r\n\t$auth = new \\SkyHub\\Security\\Auth('YOUR-API-EMAIL', 'YOUR-TOKEN');\r\n\r\n\t// The request object\r\n\t$request = new \\SkyHub\\Request\\ProductRequest($auth);\r\n\r\n\ttry {\r\n\t\t// You can get by code\r\n\t\t$productCode = 'product-sku-code';\r\n\t\t// Or passing a resource \\SkyHub\\Resource\\Product object\r\n\t\t// $obj = new \\SkyHub\\Resource\\Product()\r\n\t\t// $obj->sku = 'sku-code';\r\n\t\t// $obj->name = 'My product';\r\n\t\t// ...\r\n\t\t// $product = $request->get($obj);\r\n\r\n\t\t// a \\SkyHub\\Resource\\Product object\r\n\t\t$product = $request->get($productCode);\r\n\t} catch (\\SkyHub\\Exception\\NotFoundException $e) {\r\n\t\t// product not found\r\n\t} catch (\\SkyHub\\Exception\\SkyHubException $e) {\r\n\t\t// another exception was throw\r\n\t}\r\n\r\n## 3. Create a new Product\r\n\r\n\t<?php\r\n\trequire_once dirname(__FILE__).'/vendor/autoload.php';\r\n\r\n\t// Every request needs an Auth\r\n\t$auth = new \\SkyHub\\Security\\Auth('YOUR-API-EMAIL', 'YOUR-TOKEN');\r\n\r\n\t// The request object\r\n\t$request = new \\SkyHub\\Request\\ProductRequest($auth);\r\n\r\n\t$product = new Product();\r\n\t$product->sku = 'product-sku-code';\r\n\t$product->name = \"Product name\";\r\n\t$product->description = \"Product description\";\r\n\t$product->status = \"enabled\";\r\n\t$product->qty = 10;\r\n\t$product->price = 1000.50;\r\n\t$product->promotional_price = 850.50;\r\n\t$product->cost = 560.00;\r\n\t$product->weight = 5;\r\n\t$product->height = 15;\r\n\t$product->width = 30;\r\n\t$product->length = 15;\r\n\t$product->brand = \"product-brand\";\r\n\t$product->ean = \"\";\r\n\t$product->nbm = \"\";\r\n\t$product->categories = array(array (\r\n\t\t\"code\" => \"category-code\",\r\n\t\t\"name\" => \"Category name\"\r\n\t));\r\n\t$product->images = array(\r\n\t\t// Images URLs\r\n\t\t'http://lorempixel.com/600/400/'\r\n\t);\r\n\t$product->specifications = array(\r\n\t\tarray(\r\n\t\t\t\"key\" \t=> \"spec-key\",\r\n\t\t\t\"value\" => \"Spec value\"\r\n\t\t),\r\n\t);\r\n\t$product->variations = array(\r\n\t    array(\r\n\t      \t\"sku\" \t\t\t=> \"sku-var-code\",\r\n\t      \t\"qty\" \t\t\t=>  5,\r\n\t      \t\"ean\" \t\t\t=> \"\",\r\n\t      \t\"images\" \t\t\t=> array(\r\n\t      \t\t// Images URLs\r\n\t      \t\t'http://lorempixel.com/600/400/'\r\n\t      \t),\r\n\t      \t\"specifications\" \t=> array(\r\n\t        \tarray(\r\n\t          \t\t\"key\"   => \"spec-var-key\",\r\n\t          \t\t\"value\" => \"Spec value for variation\"\r\n\t        \t)\r\n\t      \t)\r\n\t    )\r\n\t);\r\n\t$product->variation_attributes = array(\r\n\t\t\"spec-var-attribute-key\"\r\n\t);\r\n\r\n\ttry {\r\n\t\t// send POST request\r\n\t\t$request->post($product);\r\n\t} catch (\\SkyHub\\Exception\\RequestException $e) {\r\n\t\t// Some exception was throw\r\n\t}\r\n\r\n## 4. Update a Product\r\n\r\n\t<?php\r\n\trequire_once dirname(__FILE__).'/vendor/autoload.php';\r\n\r\n\t// Every request needs an Auth\r\n\t$auth = new \\SkyHub\\Security\\Auth('YOUR-API-EMAIL', 'YOUR-TOKEN');\r\n\r\n\t// The request object\r\n\t$request = new \\SkyHub\\Request\\ProductRequest($auth);\r\n\r\n\t$product = new Product();\r\n\t// Set the code sku to the \"product to update\" code\r\n\t$product->sku = 'product-sku-code';\r\n\t// Some property changes\r\n\t$product->name = 'Changed name';\r\n\t$product->quantity = 20;\r\n\t// ...\r\n\r\n\ttry {\r\n\t\t// send PUT request\r\n\t\t$request->put($product);\r\n\t} catch (\\SkyHub\\Exception\\RequestException $e) {\r\n\t\t// Some exception was throw\r\n\t}\r\n\r\n# The Request Factory\r\n\r\nFor easy request creation or some runtime request creation you can use the \\SkyHub\\Request\\RequestFactory class to create the request instances specific to a resource type.\r\n\r\n\t<?php\r\n\trequire_once dirname(__FILE__).'/vendor/autoload.php';\r\n\r\n\t// Every request needs an Auth\r\n\t$auth = new \\SkyHub\\Security\\Auth('YOUR-API-EMAIL', 'YOUR-TOKEN');\r\n\r\n\t// An Attribute request\r\n\t$attributeReq = \\SkyHub\\Request\\RequestFactory::fromClassName('Attribute', $auth);\r\n\r\n\t// A Category request\r\n\t$categoryReq = \\SkyHub\\Request\\RequestFactory::fromClassName('Category', $auth);\r\n\r\n\t// An Order request\r\n\t$orderReq = \\SkyHub\\Request\\RequestFactory::fromClassName('Order', $auth);\r\n\r\n\t// An OrderStatus request (statuses)\r\n\t$orderStatusReq = \\SkyHub\\Request\\RequestFactory::fromClassName('OrderStatus', $auth);\r\n\r\n\t// A Product request\r\n\t$productReq = \\SkyHub\\Request\\RequestFactory::fromClassName('Product', $auth);\r\n\r\n\t// A SaleSystem request (sale_systems)\r\n\t$saleSystemReq = \\SkyHub\\Request\\RequestFactory::fromClassName('SaleSystem', $auth);\r\n\r\n\t// A StatusType request (status_types)\r\n\t$statusTypeReq = \\SkyHub\\Request\\RequestFactory::fromClassName('StatusType', $auth);\r\n\r\nYou can also use a Resource object instance to get the request object\r\n\r\n\t<?php\r\n\trequire_once dirname(__FILE__).'/vendor/autoload.php';\r\n\r\n\t// Every request needs an Auth\r\n\t$auth = new \\SkyHub\\Security\\Auth('YOUR-API-EMAIL', 'YOUR-TOKEN');\r\n\r\n\t// An Attribute request\r\n\t$attribute = new \\SkyHub\\Resource\\Attribute();\r\n\t$attributeReq = \\SkyHub\\Request\\RequestFactory::fromResource($attribute, $auth);\r\n\r\n\t// A Category request\r\n\t$category = new \\SkyHub\\Resource\\Category();\r\n\t$categoryReq = \\SkyHub\\Request\\RequestFactory::fromResource($category, $auth);\r\n\r\n\t// An Order request\r\n\t$order = new \\SkyHub\\Resource\\Order();\r\n\t$orderReq = \\SkyHub\\Request\\RequestFactory::fromResource($order, $auth);\r\n\r\n\t// An OrderStatus request (statuses)\r\n\t$orderStatus = new \\SkyHub\\Resource\\OrderStatus();\r\n\t$orderStatusReq = \\SkyHub\\Request\\RequestFactory::fromResource($orderStatus, $auth);\r\n\r\n\t// A Product request\r\n\t$product = new \\SkyHub\\Resource\\Product();\r\n\t$productReq = \\SkyHub\\Request\\RequestFactory::fromResource($product, $auth);\r\n\r\n\t// A SaleSystem request (sale_systems)\r\n\t$saleSystem = new \\SkyHub\\Resource\\SaleSystem();\r\n\t$saleSystemReq = \\SkyHub\\Request\\RequestFactory::fromResource($saleSystem, $auth);\r\n\r\n\t// A StatusType request (status_types)\r\n\t$statusType = new \\SkyHub\\Resource\\StatusType();\r\n\t$statusTypeReq = \\SkyHub\\Request\\RequestFactory::fromResource($statusType, $auth);\r\n\r\n# TODO\r\n\r\n1. **FIX** PHP notice when PUT Product resource: code index not exist\r\n\r\n# The MIT License (MIT)\r\n\r\nCopyright (c) 2015 Glauber Portella <glauberportella@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}